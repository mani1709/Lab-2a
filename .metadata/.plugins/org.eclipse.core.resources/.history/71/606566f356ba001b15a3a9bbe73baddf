import java.awt.Color;

public class Sphere implements Obj {
	double radius;
	Vec3 center;
	Color color = Color.WHITE;
	
	public Sphere(double radius, Vec3 center) {
		this.radius = radius;
		this.center = center;
	}
	
	@Override
	public double intersect(Vec3 position, Vec3 direction) {
		double a = direction.length() * direction.length();
		Vec3 pc = Utils.subtract(center, position);
		double b = 2 * Utils.dotProduct(direction, pc);
		double c = pc.length() - radius * radius;
		
		System.out.println(b);
		
		double discriminant = (b * b) - (4 * a * c);

		if(discriminant < 0 || a == 0) {
			return Double.MAX_VALUE;
		} else if (discriminant == 0) {
			return -b/2*a;
		} else {
			return Math.min((-b+Math.sqrt(discriminant)) / (2*a), (-b-Math.sqrt(discriminant)) / (2*a));
		}
	}

	@Override
	public int getColor() {
		return color.getRGB();
	}

}
